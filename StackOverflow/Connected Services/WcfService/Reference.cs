//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StackOverflow.WcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IWcfService")]
    public interface IWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/DoWork", ReplyAction="http://tempuri.org/IWcfService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/DoWork", ReplyAction="http://tempuri.org/IWcfService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceChannel : StackOverflow.WcfService.IWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceClient : System.ServiceModel.ClientBase<StackOverflow.WcfService.IWcfService>, StackOverflow.WcfService.IWcfService {
        
        public WcfServiceClient() {
        }
        
        public WcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IBlogWcfService")]
    public interface IBlogWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogWcfService/GetAllBlogs", ReplyAction="http://tempuri.org/IBlogWcfService/GetAllBlogsResponse")]
        Model.Models.Blog[] GetAllBlogs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogWcfService/GetAllBlogs", ReplyAction="http://tempuri.org/IBlogWcfService/GetAllBlogsResponse")]
        System.Threading.Tasks.Task<Model.Models.Blog[]> GetAllBlogsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogWcfService/GetBlogById", ReplyAction="http://tempuri.org/IBlogWcfService/GetBlogByIdResponse")]
        string GetBlogById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogWcfService/GetBlogById", ReplyAction="http://tempuri.org/IBlogWcfService/GetBlogByIdResponse")]
        System.Threading.Tasks.Task<string> GetBlogByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogWcfService/SaveComment", ReplyAction="http://tempuri.org/IBlogWcfService/SaveCommentResponse")]
        void SaveComment(Models.Models.BlogComment blogComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogWcfService/SaveComment", ReplyAction="http://tempuri.org/IBlogWcfService/SaveCommentResponse")]
        System.Threading.Tasks.Task SaveCommentAsync(Models.Models.BlogComment blogComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogWcfService/CreateAuthor1", ReplyAction="http://tempuri.org/IBlogWcfService/CreateAuthor1Response")]
        void CreateAuthor1(Models.Models.Author authorComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogWcfService/CreateAuthor1", ReplyAction="http://tempuri.org/IBlogWcfService/CreateAuthor1Response")]
        System.Threading.Tasks.Task CreateAuthor1Async(Models.Models.Author authorComment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlogWcfServiceChannel : StackOverflow.WcfService.IBlogWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlogWcfServiceClient : System.ServiceModel.ClientBase<StackOverflow.WcfService.IBlogWcfService>, StackOverflow.WcfService.IBlogWcfService {
        
        public BlogWcfServiceClient() {
        }
        
        public BlogWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlogWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Model.Models.Blog[] GetAllBlogs() {
            return base.Channel.GetAllBlogs();
        }
        
        public System.Threading.Tasks.Task<Model.Models.Blog[]> GetAllBlogsAsync() {
            return base.Channel.GetAllBlogsAsync();
        }
        
        public string GetBlogById(System.Guid id) {
            return base.Channel.GetBlogById(id);
        }
        
        public System.Threading.Tasks.Task<string> GetBlogByIdAsync(System.Guid id) {
            return base.Channel.GetBlogByIdAsync(id);
        }
        
        public void SaveComment(Models.Models.BlogComment blogComment) {
            base.Channel.SaveComment(blogComment);
        }
        
        public System.Threading.Tasks.Task SaveCommentAsync(Models.Models.BlogComment blogComment) {
            return base.Channel.SaveCommentAsync(blogComment);
        }
        
        public void CreateAuthor1(Models.Models.Author authorComment) {
            base.Channel.CreateAuthor1(authorComment);
        }
        
        public System.Threading.Tasks.Task CreateAuthor1Async(Models.Models.Author authorComment) {
            return base.Channel.CreateAuthor1Async(authorComment);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IAuthorWcfService")]
    public interface IAuthorWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorWcfService/CreateAuthor", ReplyAction="http://tempuri.org/IAuthorWcfService/CreateAuthorResponse")]
        void CreateAuthor(Models.Models.Author authorComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorWcfService/CreateAuthor", ReplyAction="http://tempuri.org/IAuthorWcfService/CreateAuthorResponse")]
        System.Threading.Tasks.Task CreateAuthorAsync(Models.Models.Author authorComment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorWcfServiceChannel : StackOverflow.WcfService.IAuthorWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorWcfServiceClient : System.ServiceModel.ClientBase<StackOverflow.WcfService.IAuthorWcfService>, StackOverflow.WcfService.IAuthorWcfService {
        
        public AuthorWcfServiceClient() {
        }
        
        public AuthorWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateAuthor(Models.Models.Author authorComment) {
            base.Channel.CreateAuthor(authorComment);
        }
        
        public System.Threading.Tasks.Task CreateAuthorAsync(Models.Models.Author authorComment) {
            return base.Channel.CreateAuthorAsync(authorComment);
        }
    }
}
